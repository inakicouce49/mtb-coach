// üì¶ strava.js cargado
console.log('üì¶ strava.js cargado');

const express = require('express');
const axios = require('axios');
const router = express.Router();

// ü©∫ Ruta de prueba para verificar que el m√≥dulo est√° activo
router.get('/ping', (req, res) => {
  res.send('pong');
});

// üîÑ Ruta para intercambiar el c√≥digo de autorizaci√≥n por un token de acceso
router.get('/exchange_token', async (req, res) => {
  const code = req.query.code;

  if (!code) {
    return res.status(400).send('Falta el par√°metro "code"');
  }

  try {
    const response = await axios.post('https://www.strava.com/oauth/token', {
      client_id: process.env.STRAVA_CLIENT_ID,
      client_secret: process.env.STRAVA_CLIENT_SECRET,
      code,
      grant_type: 'authorization_code'
    });

    const { access_token, refresh_token, athlete } = response.data;

    console.log('‚úÖ Access Token:', access_token);
    console.log('üèÉ‚Äç‚ôÇÔ∏è Usuario Strava:', athlete.firstname, athlete.lastname);

    // Puedes guardar el token en MongoDB si quieres persistencia
    res.redirect(`/sync?token=${access_token}`);
  } catch (error) {
    console.error('‚ùå Error al intercambiar token:', error.response?.data || error.message);
    res.status(500).send('Error al obtener el token');
  }
});

module.exports = router;

